models:
  - name: stg__bike_data
    description: "Staging table for bike data"
    columns:
      - name: started_at_ts
        description: "The timestamp when the ride started"
        tests:
          - not_null
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: timestamp

      - name: ended_at_ts
        description: "The timestamp when the ride ended"
        tests:
          - not_null
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: timestamp        

      - name: tripduration
        description: "Duration of the trip in seconds"

      - name: start_station_id
        description: "ID of the station where the ride started"

      - name: start_station_name
        description: "Name of the station where the ride started"

      - name: start_lat
        description: "Latitude of the start station"
        tests:
          - dbt_expectations.expect_column_values_to_be_between: #the ranges for latitude are -90 to 90 
              min_value: -90
              max_value: 90        

      - name: start_lng
        description: "Longitude of the start station"
        tests:
          - dbt_expectations.expect_column_values_to_be_between: #the ranges for latitude are -180 to 180
              min_value: -180
              max_value: 180
              
      - name: end_station_id
        description: "ID of the station where the ride ended"

      - name: end_station_name
        description: "Name of the station where the ride ended"

      - name: end_lat
        description: "Latitude of the end station"
        tests:
          - dbt_expectations.expect_column_values_to_be_between: #the ranges for latitude are -90 to 90 
              min_value: -90
              max_value: 90
              
      - name: end_lng
        description: "Longitude of the end station"
        tests:
          - dbt_expectations.expect_column_values_to_be_between:  #the ranges for latitude are -180 to 180
              min_value: -180
              max_value: 180
              
      - name: filename
        description: "Name of the file from which data was ingested"

  - name: stg__central_park_weather
    description: "Staging table for Central Park weather data"
    columns:
      - name: date
        description: "Date of the weather observation"
        tests:
          - not_null
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: date

      - name: awnd
        description: "Average wind speed"
        tests:
          - not_null
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: double
              
      - name: prcp
        description: "Precipitation"
        tests:
          - not_null
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: double
              
      - name: snow
        description: "Snowfall"
        tests:
          - not_null
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: double
              
      - name: snwd
        description: "Snow depth"
        tests:
          - not_null
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: double
              
      - name: tmax
        description: "Maximum temperature"
        description: ""
        tests:
          - not_null
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: int        

      - name: tmin
        description: "Minimum temperature"
        description: ""
        tests:
          - not_null
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: int
              
      - name: filename
        description: "Name of the file from which data was ingested"

  - name: stg__fhv_bases
    description: "Staging table for FHV bases data"
    columns:
      - name: base_number
        description: "The TLC license number of the dispatching base"

      - name: base_name
        description: "The official name of the base entity"

      - name: dba
        description: "The doing business as name of the base"

      - name: dba_category
        description: "Category of the base"

      - name: filename
        description: "Name of the file from which data was ingested"

  - name: stg__fhv_tripdata
    description: "Staging table for FHV trip data"
    columns:
      - name: dispatching_base_num
        description: "The TLC Base License Number of the base that dispatched the trip"
        tests:
        - relationships:
            to: ref('staging','stg__fhv_bases')
            field: base_number

      - name: pickup_datetime
        description: "The date and time of the trip pick-up"

      - name: dropoff_datetime
        description: "The date and time of the trip dropoff"

      - name: pulocationid
        description: "TLC Taxi Zone in which the trip began"

      - name: dolocationid
        description: "TLC Taxi Zone in which the trip ended"

      - name: affiliated_base_number
        description: "The TLC license number of the base that affiliated the vehicle"

      - name: filename
        description: "Name of the file from which data was ingested"

  - name: stg__fhvhv_tripdata
    description: "Staging table for FHVHV trip data"
    columns:
      - name: hvfhs_license_num
        description: "The TLC license number of the HVFHS base or business"

      - name: dispatching_base_num
        description: "The TLC Base License Number of the base that dispatched the trip"

      - name: originating_base_num
        description: "Base number of the base that received the original trip request"

      - name: request_datetime
        description: "Date/time when passenger requested to be picked up"

      - name: on_scene_datetime
        description: "Date/time when driver arrived at the pick-up location (Accessible Vehicles-only)"

      - name: pickup_datetime
        description: "The date and time of the trip pick-up"

      - name: dropoff_datetime
        description: "The date and time of the trip drop-off"

      - name: pulocationid
        description: "TLC Taxi Zone in which the trip began"

      - name: dolocationid
        description: "TLC Taxi Zone in which the trip ended"

      - name: trip_miles
        description: "Total miles for passenger trip"

      - name: trip_time
        description: "Total time in seconds for passenger trip"

      - name: base_passenger_fare
        description: "Base passenger fare before tolls, tips, taxes, and fees"

      - name: tolls
        description: "Total amount of all tolls paid in trip"

      - name: bcf
        description: "Total amount collected in trip for Black Car Fund"

      - name: sales_tax
        description: "Total amount collected in trip for NYS sales tax"

      - name: congestion_surcharge
        description: "Total amount collected in trip for NYS congestion surcharge"

      - name: airport_fee
        description: "$2.50 for both drop off and pick up at LaGuardia, Newark, and John F. Kennedy airports"

      - name: tips
        description: "Total amount of tips received from passenger"

      - name: driver_pay
        description: "Total driver pay (not including tolls or tips and net of commission, surcharges, or taxes)"

      - name: shared_request_flag
        description: "Did the passenger agree to a shared/pooled ride, regardless of whether they were matched? (Y/N)"
        tests:
          - not_null:
              config:
                severity: warn   # Set the severity level to warn since there could be some legitimate have null values  
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: boolean

      - name: shared_match_flag
        description: "Did the passenger share the vehicle with another passenger who booked separately at any point during the trip? (Y/N)"
        tests:
          - not_null:
              config:
                severity: warn    # Set the severity level to warn since there could be some legitimate have null values      
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: boolean        

      - name: access_a_ride_flag
        description: "Was the trip administered on behalf of the Metropolitan Transportation Authority (MTA)? (Y/N)"
        tests:
          - not_null:
              config:
                severity: warn    # Set the severity level to warn since there could be some legitimate have null values  
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: boolean        

      - name: wav_request_flag
        description: "Did the passenger request a wheelchair-accessible vehicle (WAV)? (Y/N)"
        tests:
          - not_null:
              config:
                severity: warn    # Set the severity level to warn since there could be some legitimate have null values      
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: boolean
              
      - name: wav_match_flag
        description: "Did the trip occur in a wheelchair-accessible vehicle (WAV)? (Y/N)"
        tests:
          - not_null:
              config:
                severity: warn     # Set the severity level to warn since there could be some legitimate have null values     
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: boolean
              
      - name: filename
        description: "Name of the file from which data was ingested"

  - name: stg__green_tripdata
    description: "Staging table for green taxi trip data"
    columns:
      - name: vendorid
        description: "A code indicating the LPEP provider that provided the record"

      - name: lpep_pickup_datetime
        description: "The date and time when the meter was engaged"

      - name: lpep_dropoff_datetime
        description: "The date and time when the meter was disengaged"

      - name: store_and_fwd_flag
        description: "This flag indicates whether the trip record was held in vehicle memory before sending to the vendor, aka 'store and forward,' because the vehicle did not have a connection to the server. Y= store and forward trip, N= not a store and forward trip"
        tests:
          - not_null:
              config:
                severity: warn     # Set the severity level to warn since there could be some legitimate have null values     
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: boolean
              
      - name: ratecodeid
        description: "The final rate code in effect at the end of the trip. 1= Satndard rate, 2= JFK, 3= Newark, 4= Nassau or Westchester, 5= Negotiated fare, 6= Group ride"

      - name: pulocationid
        description: "TLC Taxi Zone in which the taximeter was engaged"

      - name: dolocationid
        description: "TLC Taxi Zone in which the taximeter was disengaged"

      - name: passenger_count
        description: "The number of passengers in the vehicle"

      - name: trip_distance
        description: "The elapsed trip distance in miles reported by the taximeter"

      - name: fare_amount
        description: "The time-and-distance fare calculated by the meter"

      - name: extra
        description: "Miscellaneous extras and surcharges. Currently, this only includes the $0.50 and $1 rush hour and overnight charges."

      - name: mta_tax
        description: "$0.50 MTA tax that is automatically triggered based on the metered rate in use"

      - name: tip_amount
        description: "This field is automatically populated for credit card tips. Cash tips are not included"

      - name: tolls_amount
        description: "Total amount of all tolls paid in trip"

      - name: improvement_surcharge
        description: "$0.30 improvement surcharge assessed on hailed trips at the flag drop. The improvement surcharge began being levied in 2015."

      - name: total_amount
        description: "The total amount charged to passengers. Does not include cash tips"

      - name: payment_type
        description: "A numeric code signifying how the passenger paid for the trip. 1= Credit card, 2= Cash, 3= No charge, 4= Dispute, 5= Unknown, 6= Voided trip"

      - name: trip_type
        description: "A code indicating whether the trip was a street-hail or a dispatch that is automatically assigned based on the metered rate in use but can be altered by the driver. 1= Street-hail, 2= Dispatch"

      - name: congestion_surcharge
        description: "Total amount collected in trip for NYS congestion surcharge"

      - name: filename
        description: "Name of the file from which data was ingested"

  - name: stg__yellow_tripdata
    description: "Staging table for yellow taxi trip data"
    columns:
      - name: vendorid
        description: "A code indicating the LPEP provider that provided the record."

      - name: tpep_pickup_datetime
        description: "The date and time when the meter was engaged."

      - name: tpep_dropoff_datetime
        description: "The date and time when the meter was disengaged."

      - name: passenger_count
        description: "The number of passengers in the vehicle."

      - name: trip_distance
        description: "The elapsed trip distance in miles reported by the taximeter."

      - name: ratecodeid
        description: "The final rate code in effect at the end of the trip. 1= Satndard rate, 2= JFK, 3= Newark, 4= Nassau or Westchester, 5= Negotiated fare, 6= Group ride"

      - name: store_and_fwd_flag
        description: "This flag indicates whether the trip record was held in vehicle memory before sending to the vendor, aka 'store and forward,' because the vehicle did not have a connection to the server."
        tests:
          - not_null:
              config:
                severity: warn     # Set the severity level to warn since there could be some legitimate have null values
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: boolean
              
      - name: pulocationid
        description: "TLC Taxi Zone in which the taximeter was engaged."

      - name: dolocationid
        description: "TLC Taxi Zone in which the taximeter was disengaged."

      - name: payment_type
        description: "A numeric code signifying how the passenger paid for the trip. 1= Credit Card, 2= Cash, 3= No charge, 4= Dispute, 5= Unknown, 6= Voided trip"

      - name: fare_amount
        description: "The time-and-distance fare calculated by the meter."

      - name: extra
        description: "Miscellaneous extras and surcharges. Currently, this only includes the $0.50 and $1 rush hour and overnight charges."

      - name: mta_tax
        description: "$0.50 MTA tax that is automatically triggered based on the metered rate in use."

      - name: tip_amount
        description: "This field is automatically populated for credit card tips. Cash tips are not included."

      - name: tolls_amount
        description: "Total amount of all tolls paid in trip."

      - name: improvement_surcharge
        description: "$0.30 improvement surcharge assessed trips at the flag drop. The improvement surcharge began being levied in 2015."

      - name: total_amount
        description: "The total amount charged to passengers. Does not include cash tips."

      - name: congestion_surcharge
        description: "Total amount collected in trip for NYS congestion surcharge."

      - name: airport_fee
        description: "$1.25 for pick up only at LaGuardia and John F. Kennedy Airports."

      - name: filename
        description: "Name of the file from which data was ingested"